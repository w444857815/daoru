<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangzhixuan.mapper.UserMapper">

    <resultMap id="userVoResultMap" type="com.wangzhixuan.model.vo.UserVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="age" property="age" jdbcType="TINYINT"/>
        <result column="user_type" property="userType" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="organization_id" property="organizationId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>

        <result column="organizationName" property="organizationName" jdbcType="VARCHAR"/>

        <collection property="rolesList" ofType="Role">
            <id column="roleId" property="id"/>
            <result column="roleName" property="name"/>
        </collection>
    </resultMap>

    <!-- 通用查询结果列-->
    <sql id="Base_Column_List">
        id, login_name AS loginName, name, password, salt, sex, age, phone, user_type AS userType, status, organization_id AS organizationId, create_time AS createTime
    </sql>

    <select id="selectUserVoById" resultMap="userVoResultMap" parameterType="java.lang.Long">
        SELECT
        t.id,
        login_name,
        t.`name`,
        `password`,
        sex,
        age,
        user_type,
        t.`status`,
        organization_id,
        t.create_time,
        phone,
        s.`name` AS organizationName,
        o.id AS roleId,
        o.`name` AS roleName
        FROM
        user t
        LEFT JOIN user_role r ON t.id = r.user_id
        LEFT JOIN role o ON r.role_id = o.id
        LEFT JOIN organization s ON s.id = t.organization_id
        <where>
            t.id = #{id}
        </where>
    </select>

    <select id="selectUserPage" resultType="Map">
        SELECT 
        t.id, t.login_name AS loginName, t.`name`, t.phone, t.`password`, 
        t.sex, t.age, t.create_time AS createTime, t.user_type AS userType, 
        t.`status`, t.organization_id AS organizationId,  
        s.`name` AS organizationName, group_concat(o.`name`) AS rolesList
        FROM user t
        LEFT JOIN user_role r ON t.id = r.user_id
        LEFT JOIN role o ON r.role_id = o.id
        LEFT JOIN organization s ON s.id = t.organization_id
        <where>
            <if test=" name != null and name != '' ">
                t.name = #{name}
            </if>
            <if test=" organizationId != null ">
                t.organization_id = #{organizationId}
            </if>
            <if test=" startTime != null ">
                <![CDATA[ and t.create_time >= #{startTime} ]]>
            </if>
            <if test=" endTime != null ">
                <![CDATA[ and t.create_time <= #{endTime} ]]>
            </if>
        </where>
        GROUP BY t.id
    </select>


	<resultMap id="BaseResultMap" type="com.wangzhixuan.model.User" >
			 <id column="id" property="id" jdbcType="BIGINT" />
			<result column="login_name" property="loginName" jdbcType="VARCHAR" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="password" property="password" jdbcType="VARCHAR" />
			<result column="salt" property="salt" jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="TINYINT" />
			<result column="age" property="age" jdbcType="TINYINT" />
			<result column="phone" property="phone" jdbcType="VARCHAR" />
			<result column="user_type" property="userType" jdbcType="TINYINT" />
			<result column="status" property="status" jdbcType="TINYINT" />
			<result column="organization_id" property="organizationId" jdbcType="INTEGER" />
			<result column="file_type" property="fileType" jdbcType="INTEGER" />
			<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Baseuser_Column_List" >
		id,
		login_name,
		name,
		password,
		salt,
		sex,
		age,
		phone,
		user_type,
		status,
		organization_id,
		file_type,
		create_time
  </sql>


	<select id="selectById" resultMap="BaseResultMap" >
	    select 
	    <include refid="Baseuser_Column_List" />
	    from user
	    where id = #{id,jdbcType=INTEGER}
	  </select>



	<update id="updateById" parameterType="com.wangzhixuan.model.User" >
    update user
    <set >
	<if test="loginName != null" >
	login_name = #{loginName,jdbcType=VARCHAR},
	</if>
	<if test="name != null" >
	name = #{name,jdbcType=VARCHAR},
	</if>
	<if test="password != null" >
	password = #{password,jdbcType=VARCHAR},
	</if>
	<if test="salt != null" >
	salt = #{salt,jdbcType=VARCHAR},
	</if>
	<if test="sex != null" >
	sex = #{sex,jdbcType=TINYINT},
	</if>
	<if test="age != null" >
	age = #{age,jdbcType=TINYINT},
	</if>
	<if test="phone != null" >
	phone = #{phone,jdbcType=VARCHAR},
	</if>
	<if test="userType != null" >
	user_type = #{userType,jdbcType=TINYINT},
	</if>
	<if test="status != null" >
	status = #{status,jdbcType=TINYINT},
	</if>
	<if test="organizationId != null" >
	organization_id = #{organizationId,jdbcType=INTEGER},
	</if>
	<if test="fileType != null" >
	file_type = #{fileType,jdbcType=INTEGER},
	</if>
	<if test="createTime != null" >
	create_time = #{createTime,jdbcType=TIMESTAMP},
	</if>
    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>