<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangzhixuan.mapper.DbConfigMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.wangzhixuan.model.DbConfigTable">
		<id column="id" property="id" />
		<result column="col0" property="col0" />
		<result column="col1" property="col1" />
		<result column="col2" property="col2" />
		<result column="col3" property="col3" />
		<result column="col4" property="col4" />
		<result column="col5" property="col5" />
		<result column="col6" property="col6" />
		<result column="col7" property="col7" />
		<result column="col8" property="col8" />
		<result column="col9" property="col9" />
		<result column="col10" property="col10" />
		<result column="col11" property="col11" />
		<result column="col12" property="col12" />
		<result column="col13" property="col13" />
		<result column="col14" property="col14" />
		<result column="col15" property="col15" />
		<result column="col16" property="col16" />
		<result column="col17" property="col17" />
		<result column="col18" property="col18" />
		<result column="col19" property="col19" />
		<result column="col20" property="col20" />
		<result column="col21" property="col21" />
		<result column="col22" property="col22" />
		<result column="col23" property="col23" />
		<result column="col24" property="col24" />
		<result column="col25" property="col25" />
		<result column="col26" property="col26" />
		<result column="col27" property="col27" />
		<result column="col28" property="col28" />
		<result column="col29" property="col29" />
				
	</resultMap>
	
	
	<select id="selectAllCount" resultType="java.lang.Integer" >
	    select 
			count(1)
	    from db_tableone
	  </select>
	
	
	
	<select id="selectExistNums" parameterType="string" resultType="string" >
	    select 
			id_card
	    from db_tableone where 1=1 and id_card in 
	    <foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
<!-- 			'${item}' -->
			#{item,jdbcType=VARCHAR}
		</foreach>
	    
	  </select>
	  
	  
	  
	  <update id="updateByIdCard" parameterType="com.wangzhixuan.model.DbTableone" >
		    update db_tableone
		    <set >
		      <if test="idCard != null" >
		        id_card = #{idCard,jdbcType=VARCHAR},
		      </if>
		      <if test="name != null" >
		        name = #{name,jdbcType=VARCHAR},
		      </if>
		      <if test="birthday != null" >
		        birthday = #{birthday,jdbcType=VARCHAR},
		      </if>
		      <if test="address != null" >
		        address = #{address,jdbcType=VARCHAR},
		      </if>
		      <if test="sex != null" >
		        sex = #{sex,jdbcType=VARCHAR},
		      </if>
		      <if test="minzu != null" >
		        minzu = #{minzu,jdbcType=VARCHAR},
		      </if>
		      <if test="rysx != null" >
		        rysx = #{rysx,jdbcType=VARCHAR},
		      </if>
		      <if test="country != null" >
		        country = #{country,jdbcType=VARCHAR},
		      </if>
		      <if test="countryCun != null" >
		        country_cun = #{countryCun,jdbcType=VARCHAR},
		      </if>
		      <if test="cbzt != null" >
		        cbzt = #{cbzt,jdbcType=VARCHAR},
		      </if>
		      <if test="createTime != null" >
		        create_time = #{createTime,jdbcType=TIMESTAMP},
		      </if>
		    </set>
		    where
		    
		    card_num = #{cardNum,jdbcType=VARCHAR}
	  </update>
	  
	  
	  
	  
	  <update id="updateBatchByIdCard" parameterType="com.wangzhixuan.model.DbTableone">
        <!-- 接收list参数，循环着组装sql语句，注意for循环的写法
             separator=";" 代表着每次循环完，在sql后面放一个分号
             item="cus" 循环List的每条的结果集
             collection="list" list 即为 map传过来的参数key -->
        <foreach collection="list" separator=";" item="cus" open="" close="" >
            update db_tableone
		    <set >
		      <if test="cus.idCard != null" >
		        id_card = #{cus.idCard,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.name != null" >
		        name = #{cus.name,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.birthday != null" >
		        birthday = #{cus.birthday,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.address != null" >
		        address = #{cus.address,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.sex != null" >
		        sex = #{cus.sex,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.minzu != null" >
		        minzu = #{cus.minzu,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.rysx != null" >
		        rysx = #{cus.rysx,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.country != null" >
		        country = #{cus.country,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.countryCun != null" >
		        country_cun = #{cus.countryCun,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.cbzt != null" >
		        cbzt = #{cus.cbzt,jdbcType=VARCHAR},
		      </if>
		      <if test="cus.createTime != null" >
		        create_time = #{cus.createTime,jdbcType=TIMESTAMP},
		      </if>
		    </set>
		    where
		    
		    card_num = #{cus.cardNum,jdbcType=VARCHAR}
        </foreach>
		</update>
		
		
		
		
		
		
		<insert id ="insertBatch" parameterType="map" >
	    insert into ${tableName} 
	    
<!-- 	    比如这里有4个 col0  col1  col2  col3 -->
	    <foreach collection="colNumsList" index="index" item="item" open="("
			separator="," close=")">
			col${index}
		</foreach>
		
	    values 
	    
	    
<!-- 	    这里的list是数据的list  比如数据有13条，这里的index就是13 -->
	    <foreach collection="list" index="index" item="item" separator="," >
<!-- 			#{item.col${index}} -->
			<foreach collection="colNumsList" index="indexli" item="itemli" open="("
			separator="," close=")">
			#{item.col${indexli}}
			</foreach>
		</foreach>
		
<!-- 		(1,1,1,1),(2,2,2,2) -->
		
     </insert >
		
		
<!-- 		删表信息 -->
		<update id="truncateTable">
		truncate ${tableName}
		</update>
		
		
		
		<select id="selectEveryCount" resultType="Integer" >
			select count(1) from db_${loginName}_one_a
			union all	
			select count(1) from db_${loginName}_one_b
			union all	
			select count(1) from db_${loginName}_two_a
			union all	
			select count(1) from db_${loginName}_two_b
	  </select>
	  
	  
	  
	  <select id="selectdbTablesData" resultMap="BaseResultMap">
	  	  select * from ${tableqian} where ${col_qian} not in (select ${col_hou} from ${tablehou})
	  </select>
	  
</mapper>
